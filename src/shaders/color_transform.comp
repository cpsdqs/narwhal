#version 450

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;
layout(set = 0, binding = 0) buffer Data {
    float lower_bound;
    float lut_range;
};
layout(set = 0, binding = 1) uniform sampler2D data_in;
layout(set = 0, binding = 2, rgba16f) uniform writeonly image2D data_out;
layout(set = 0, binding = 3) uniform sampler2D lut;

void main() {
    vec2 tex_coord = (gl_GlobalInvocationID.xy + vec2(0.5)) / vec2(imageSize(data_out));
    vec4 pixel = texture(data_in, tex_coord);

    pixel.r = texture(lut, vec2((pixel.r - lower_bound) / lut_range, 0.5)).r;
    pixel.g = texture(lut, vec2((pixel.g - lower_bound) / lut_range, 0.5)).g;
    pixel.b = texture(lut, vec2((pixel.b - lower_bound) / lut_range, 0.5)).b;

    imageStore(data_out, ivec2(gl_GlobalInvocationID.xy), pixel);
}
